// Code generated by protoc-gen-go.
// source: Be.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	Be.proto
	He.proto
	Li.proto
	general.proto

It has these top-level messages:
	Asset_Req
	Asset_CloudReq
	Asset_Res
	ResponseMsg
	AAA_RegRequest
	AAA_APIKeypair
	AAA_APIToken
	AAA_ThirdpartyKey
	CloudResponse
	CloudRequest
	GeneralMsgIn
	GeneralMsgOut
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Asset_Req struct {
	Id    string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name  string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Param map[string]string `protobuf:"bytes,3,rep,name=param" json:"param,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Asset_Req) Reset()                    { *m = Asset_Req{} }
func (m *Asset_Req) String() string            { return proto.CompactTextString(m) }
func (*Asset_Req) ProtoMessage()               {}
func (*Asset_Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Asset_Req) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Asset_Req) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Asset_Req) GetParam() map[string]string {
	if m != nil {
		return m.Param
	}
	return nil
}

type Asset_CloudReq struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Cloud string `protobuf:"bytes,2,opt,name=cloud" json:"cloud,omitempty"`
	Param []byte `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
}

func (m *Asset_CloudReq) Reset()                    { *m = Asset_CloudReq{} }
func (m *Asset_CloudReq) String() string            { return proto.CompactTextString(m) }
func (*Asset_CloudReq) ProtoMessage()               {}
func (*Asset_CloudReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Asset_CloudReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Asset_CloudReq) GetCloud() string {
	if m != nil {
		return m.Cloud
	}
	return ""
}

func (m *Asset_CloudReq) GetParam() []byte {
	if m != nil {
		return m.Param
	}
	return nil
}

type Asset_Res struct {
	Code int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
}

func (m *Asset_Res) Reset()                    { *m = Asset_Res{} }
func (m *Asset_Res) String() string            { return proto.CompactTextString(m) }
func (*Asset_Res) ProtoMessage()               {}
func (*Asset_Res) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Asset_Res) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*Asset_Req)(nil), "pb.Asset_Req")
	proto.RegisterType((*Asset_CloudReq)(nil), "pb.Asset_CloudReq")
	proto.RegisterType((*Asset_Res)(nil), "pb.Asset_Res")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Aseet service

type AseetClient interface {
	AssetTemplate(ctx context.Context, in *Asset_Req, opts ...grpc.CallOption) (*Asset_Res, error)
	AssetStorein(ctx context.Context, in *Asset_CloudReq, opts ...grpc.CallOption) (*Asset_Res, error)
}

type aseetClient struct {
	cc *grpc.ClientConn
}

func NewAseetClient(cc *grpc.ClientConn) AseetClient {
	return &aseetClient{cc}
}

func (c *aseetClient) AssetTemplate(ctx context.Context, in *Asset_Req, opts ...grpc.CallOption) (*Asset_Res, error) {
	out := new(Asset_Res)
	err := grpc.Invoke(ctx, "/pb.Aseet/Asset_template", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aseetClient) AssetStorein(ctx context.Context, in *Asset_CloudReq, opts ...grpc.CallOption) (*Asset_Res, error) {
	out := new(Asset_Res)
	err := grpc.Invoke(ctx, "/pb.Aseet/Asset_storein", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Aseet service

type AseetServer interface {
	AssetTemplate(context.Context, *Asset_Req) (*Asset_Res, error)
	AssetStorein(context.Context, *Asset_CloudReq) (*Asset_Res, error)
}

func RegisterAseetServer(s *grpc.Server, srv AseetServer) {
	s.RegisterService(&_Aseet_serviceDesc, srv)
}

func _Aseet_AssetTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Asset_Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AseetServer).AssetTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Aseet/AssetTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AseetServer).AssetTemplate(ctx, req.(*Asset_Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _Aseet_AssetStorein_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Asset_CloudReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AseetServer).AssetStorein(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Aseet/AssetStorein",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AseetServer).AssetStorein(ctx, req.(*Asset_CloudReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Aseet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Aseet",
	HandlerType: (*AseetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Asset_template",
			Handler:    _Aseet_AssetTemplate_Handler,
		},
		{
			MethodName: "Asset_storein",
			Handler:    _Aseet_AssetStorein_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Be.proto",
}

func init() { proto.RegisterFile("Be.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xbd, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x0e, 0x46, 0xf4, 0xa0, 0x15, 0x3a, 0x75, 0x88, 0xba, 0x50, 0x65, 0xca, 0x64, 0xa1,
	0xc2, 0x50, 0xb1, 0x15, 0xc4, 0xc6, 0x80, 0xf2, 0x02, 0xc8, 0x69, 0x6e, 0x88, 0x48, 0x62, 0x13,
	0xbb, 0x48, 0x7d, 0x14, 0xde, 0x16, 0xd9, 0xa9, 0x89, 0x22, 0xd8, 0xee, 0xfb, 0x7c, 0xf7, 0xfd,
	0xc8, 0x70, 0xf9, 0x44, 0xd2, 0xf4, 0xda, 0x69, 0xe4, 0xa6, 0xcc, 0xbe, 0x19, 0xcc, 0x76, 0xd6,
	0x92, 0x7b, 0x2f, 0xe8, 0x13, 0x17, 0xc0, 0xeb, 0x2a, 0x65, 0x6b, 0x96, 0xcf, 0x0a, 0x5e, 0x57,
	0x88, 0x70, 0xde, 0xa9, 0x96, 0x52, 0x1e, 0x98, 0x30, 0xa3, 0x04, 0x61, 0x54, 0xaf, 0xda, 0x34,
	0x59, 0x27, 0xf9, 0xd5, 0x26, 0x95, 0xa6, 0x94, 0xbf, 0x0a, 0xf2, 0xcd, 0x3f, 0xbd, 0x74, 0xae,
	0x3f, 0x16, 0xc3, 0xda, 0x6a, 0x0b, 0x30, 0x92, 0x78, 0x03, 0xc9, 0x07, 0x1d, 0x4f, 0x16, 0x7e,
	0xc4, 0x25, 0x88, 0x2f, 0xd5, 0x1c, 0xa2, 0xc9, 0x00, 0x1e, 0xf9, 0x96, 0x65, 0xaf, 0xb0, 0x18,
	0x84, 0x9f, 0x1b, 0x7d, 0xa8, 0xfe, 0xcb, 0xb7, 0x04, 0xb1, 0xf7, 0x6f, 0xf1, 0x36, 0x00, 0xcf,
	0xc6, 0x84, 0x2c, 0xbf, 0x3e, 0xe5, 0xc8, 0x6e, 0xc7, 0xa2, 0xd6, 0x17, 0xdb, 0xeb, 0x8a, 0x82,
	0x94, 0x28, 0xc2, 0xbc, 0xd1, 0x20, 0x76, 0x96, 0xc8, 0xe1, 0x5d, 0xf4, 0x75, 0xd4, 0x9a, 0x46,
	0x39, 0xc2, 0xf9, 0xa4, 0xe4, 0x6a, 0x02, 0x6d, 0x76, 0x86, 0x0f, 0x30, 0x1f, 0xa0, 0x75, 0xba,
	0xa7, 0xba, 0x43, 0x1c, 0x37, 0x62, 0xf8, 0x3f, 0x57, 0xe5, 0x45, 0xf8, 0x86, 0xfb, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x89, 0x4c, 0x16, 0x47, 0x92, 0x01, 0x00, 0x00,
}
