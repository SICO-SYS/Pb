// Code generated by protoc-gen-go.
// source: Be.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	Be.proto
	He.proto
	Li.proto
	general.proto

It has these top-level messages:
	AssetTemplateCall
	AssetCloudCall
	AssetMsgBack
	AAAGenerateTokenCall
	AAAGenerateTokenBack
	AAATokenCall
	AAATokenBack
	CloudAPICall
	CloudAPIBack
	CloudTokenCall
	CloudTokenBack
	GeneralMsgCall
	GeneralMsgBack
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AssetTemplateCall struct {
	Id    string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name  string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Param map[string]string `protobuf:"bytes,3,rep,name=param" json:"param,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AssetTemplateCall) Reset()                    { *m = AssetTemplateCall{} }
func (m *AssetTemplateCall) String() string            { return proto.CompactTextString(m) }
func (*AssetTemplateCall) ProtoMessage()               {}
func (*AssetTemplateCall) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AssetTemplateCall) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AssetTemplateCall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AssetTemplateCall) GetParam() map[string]string {
	if m != nil {
		return m.Param
	}
	return nil
}

type AssetCloudCall struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Cloud string `protobuf:"bytes,2,opt,name=cloud" json:"cloud,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *AssetCloudCall) Reset()                    { *m = AssetCloudCall{} }
func (m *AssetCloudCall) String() string            { return proto.CompactTextString(m) }
func (*AssetCloudCall) ProtoMessage()               {}
func (*AssetCloudCall) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AssetCloudCall) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AssetCloudCall) GetCloud() string {
	if m != nil {
		return m.Cloud
	}
	return ""
}

func (m *AssetCloudCall) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type AssetMsgBack struct {
	Code int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *AssetMsgBack) Reset()                    { *m = AssetMsgBack{} }
func (m *AssetMsgBack) String() string            { return proto.CompactTextString(m) }
func (*AssetMsgBack) ProtoMessage()               {}
func (*AssetMsgBack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AssetMsgBack) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AssetMsgBack) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*AssetTemplateCall)(nil), "pb.AssetTemplateCall")
	proto.RegisterType((*AssetCloudCall)(nil), "pb.AssetCloudCall")
	proto.RegisterType((*AssetMsgBack)(nil), "pb.AssetMsgBack")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AssetService service

type AssetServiceClient interface {
	CreateTemplateRPC(ctx context.Context, in *AssetTemplateCall, opts ...grpc.CallOption) (*AssetMsgBack, error)
	AddAssetRPC(ctx context.Context, in *AssetCloudCall, opts ...grpc.CallOption) (*AssetMsgBack, error)
}

type assetServiceClient struct {
	cc *grpc.ClientConn
}

func NewAssetServiceClient(cc *grpc.ClientConn) AssetServiceClient {
	return &assetServiceClient{cc}
}

func (c *assetServiceClient) CreateTemplateRPC(ctx context.Context, in *AssetTemplateCall, opts ...grpc.CallOption) (*AssetMsgBack, error) {
	out := new(AssetMsgBack)
	err := grpc.Invoke(ctx, "/pb.AssetService/CreateTemplateRPC", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetServiceClient) AddAssetRPC(ctx context.Context, in *AssetCloudCall, opts ...grpc.CallOption) (*AssetMsgBack, error) {
	out := new(AssetMsgBack)
	err := grpc.Invoke(ctx, "/pb.AssetService/AddAssetRPC", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AssetService service

type AssetServiceServer interface {
	CreateTemplateRPC(context.Context, *AssetTemplateCall) (*AssetMsgBack, error)
	AddAssetRPC(context.Context, *AssetCloudCall) (*AssetMsgBack, error)
}

func RegisterAssetServiceServer(s *grpc.Server, srv AssetServiceServer) {
	s.RegisterService(&_AssetService_serviceDesc, srv)
}

func _AssetService_CreateTemplateRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetTemplateCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServiceServer).CreateTemplateRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AssetService/CreateTemplateRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServiceServer).CreateTemplateRPC(ctx, req.(*AssetTemplateCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetService_AddAssetRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssetCloudCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetServiceServer).AddAssetRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AssetService/AddAssetRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetServiceServer).AddAssetRPC(ctx, req.(*AssetCloudCall))
	}
	return interceptor(ctx, in, info, handler)
}

var _AssetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AssetService",
	HandlerType: (*AssetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTemplateRPC",
			Handler:    _AssetService_CreateTemplateRPC_Handler,
		},
		{
			MethodName: "AddAssetRPC",
			Handler:    _AssetService_AddAssetRPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Be.proto",
}

func init() { proto.RegisterFile("Be.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xcd, 0x6a, 0x83, 0x40,
	0x10, 0xee, 0x6a, 0x2d, 0xed, 0x24, 0x84, 0x64, 0x48, 0x41, 0x72, 0x12, 0x4f, 0x9e, 0x3c, 0xa4,
	0x3f, 0x84, 0x1e, 0x0a, 0x89, 0xf4, 0x52, 0x28, 0x04, 0xdb, 0x17, 0x58, 0xdd, 0x21, 0x48, 0x34,
	0x8a, 0x6e, 0x02, 0x79, 0x80, 0x3e, 0x4c, 0xdf, 0xb2, 0xec, 0x44, 0xed, 0xa1, 0xde, 0xbe, 0xf9,
	0xfc, 0x7e, 0x66, 0x5c, 0xb8, 0xdd, 0x50, 0x58, 0xd5, 0xa5, 0x2e, 0xd1, 0xaa, 0x12, 0xff, 0x47,
	0xc0, 0x6c, 0xdd, 0x34, 0xa4, 0xbf, 0xa8, 0xa8, 0x72, 0xa9, 0x29, 0x92, 0x79, 0x8e, 0x13, 0xb0,
	0x32, 0xe5, 0x0a, 0x4f, 0x04, 0x77, 0xb1, 0x95, 0x29, 0x44, 0xb8, 0x3e, 0xc8, 0x82, 0x5c, 0x8b,
	0x19, 0xc6, 0xf8, 0x0c, 0x4e, 0x25, 0x6b, 0x59, 0xb8, 0xb6, 0x67, 0x07, 0xa3, 0xa5, 0x17, 0x56,
	0x49, 0xf8, 0x2f, 0x29, 0xdc, 0x1a, 0xc9, 0xdb, 0x41, 0xd7, 0xe7, 0xf8, 0x22, 0x5f, 0xac, 0x00,
	0xfe, 0x48, 0x9c, 0x82, 0xbd, 0xa7, 0x73, 0x5b, 0x65, 0x20, 0xce, 0xc1, 0x39, 0xc9, 0xfc, 0xd8,
	0x95, 0x5d, 0x86, 0x17, 0x6b, 0x25, 0xfc, 0x77, 0x98, 0x70, 0x41, 0x94, 0x97, 0x47, 0x35, 0xb8,
	0xe7, 0x1c, 0x9c, 0xd4, 0x7c, 0xec, 0xbc, 0x3c, 0x98, 0xed, 0x95, 0xd4, 0xd2, 0xb5, 0x3d, 0x11,
	0x8c, 0x63, 0xc6, 0xfe, 0x23, 0x8c, 0x39, 0xeb, 0xa3, 0xd9, 0x6d, 0x64, 0xba, 0x37, 0x9a, 0xb4,
	0x54, 0xc4, 0x59, 0x76, 0xcc, 0xd8, 0xec, 0x56, 0x34, 0xbb, 0x36, 0xcb, 0xc0, 0xe5, 0xb7, 0x68,
	0x6d, 0x9f, 0x54, 0x9f, 0xb2, 0x94, 0xf0, 0x15, 0x66, 0x51, 0x4d, 0x52, 0x53, 0x77, 0x74, 0xbc,
	0x8d, 0xf0, 0x7e, 0xf0, 0x57, 0x2c, 0xa6, 0x3d, 0xdd, 0x96, 0xfa, 0x57, 0xf8, 0x04, 0xa3, 0xb5,
	0x52, 0x4c, 0x1a, 0x27, 0xf6, 0x92, 0xfe, 0xc6, 0x21, 0x5b, 0x72, 0xc3, 0x0f, 0xf8, 0xf0, 0x1b,
	0x00, 0x00, 0xff, 0xff, 0x21, 0xe7, 0x4c, 0xd6, 0xcc, 0x01, 0x00, 0x00,
}
